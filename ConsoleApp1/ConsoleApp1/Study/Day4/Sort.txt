sort의 종류 sort의 대해서 (https://velog.io/@kku64r/sort)
https://hyo-ue4study.tistory.com/68
https://roytravel.tistory.com/328

1.선택 정렬
선택 정렬이란 배열에서 최소값을 반복적으로 찾아 정렬하는 알고리즘이다.
1번째부터 끝까지 훑어서 가장 작은 게 1번째, 
2번째부터 끝까지 훑어서 가장 작은 게 2번째... 정렬이 끝날 때까지 반복한다. 
이미 정렬되어 있는 자료구조에 삽입/제거 할 때나 배열이 작은 경우에는 매우 효율적이다.

2. 삽입 정렬
k번째 원소를 1부터 k-1까지와 비교해 적절한 위치에 끼워넣고 그 뒤의 자료를 한 칸씩 뒤로 밀어내는 방식이다.
삽입 정렬이란 정렬을 진행할 원소의 index보다 낮은 곳에 있는 원소들을 탐색하며 알맞은 위치에 삽입해주는 정렬 알고리즘이다. 
동작 방식은 두 번째 index부터 시작한다. 그 이유는 첫 번째 index는 비교할 원소가 없기 때문이다.

3. 버블정렬
동작 방식은 인접한 두 요소간의 대소 비교를 진행한다.
시간 복잡도가 안좋지만 코드가 단순하다. 
원소의 이동이 거품이 수면으로 올라오는 듯한 모습을 보이기 대문에 지어진 이름이다.
만약 배열에 n개의 요소가 있을 경우 1번째 원소 vs 2번째 원소를 비교하고 2번째 원소 vs 3번째 원소를 비교하고, ... n-1번째 원소 vs n번째 요소를 비교하면 1회전 비교가 끝난다. 
1회전이 끝나면 가장 큰 원소는 맨 뒤에 위치하게 되므로 2회전 비교에서는 제외된다. 
마찬가지로 두 번째로 큰 원소는 가장 큰 원소 앞에 위치하게 되므로 3회전 비교에서는 제외된다

4. 병합정렬
병합 정렬은 분할정복과 재귀 알고리즘을 사용하는 정렬 알고리즘이다.
배열의 길이가 1이 될 때까지 2개의 부분 배열로 분할한다.그 후, 
2개의 부분 배열을 합병하고 정렬한다. 
모든 부분 배열이 합병될 때까지 반복한다.
부분 배열을 위한 추가적인 메모리 공간이 필요하다는 단점이 있다.

5. 힙정렬
힙이란 트리 기반의 자료구조로서, 두 개의 노드를 가진 완전 이진 트리를 의미한다. 
따라서 힙 정렬이란 완전 이진 트리를 기반으로 하는 정렬 알고리즘이다. 
힙의 분류는 크게 최대 힙과 최소 힙 두 가지로 나뉜다. 
최대 힙은 내림차순 정렬에 사용하며, 최소 힙은 오름차순 정렬에 사용한다.
선택 정렬과 거의 같지만, 힙을 사용해서 가장 큰 원소를 찾는다는 차이점이 있다.
트리 기반으로 최대 힙 트리(내림차순), 최소 힙 트리(오름차순)을 구성해 정렬한다.
항상 nlogn의 성능을 발휘해 가장 안정적인 성능을 보인다.
다만, 실제로는 퀵정렬이 일반적으로 빠르다.

6.퀵정렬
퀵 정렬은 분할정복법과 재귀를 사용해 정렬하는 알고리즘이다.
데이터 집합 내에 임의 기준(피벗)값을 정하고, 
집합을 해당 피벗을 기준으로 두 개의 부분 집합으로 나눈다. 
한 쪽 집합에는 피벗보다 작은 값을, 나머지 한 쪽 집합에는 피벗보다 큰 값을 넣는다. 
더 이상 쪼갤 부분 집합이 없을 때까지 위 과정을 반복한다.

7.트리정렬
이진 탐색 트리를 만들어 정렬하는 방식이다. 
추가될 값이 기존 노드 값보다 작으면 왼쪽 자식으로, 크거나 같으면 오른쪽 자식 위치로 간다. 
모든 값이 노드로 추가되었으면 해당 트리를 중위 순회 방식으로 순회하여 값을 정렬한다.

8.팀정렬
병합+삽입 정렬로 안정적이며 추가 메모리를 사용하지만 병합 정렬에 비해 적은 추가 메모리를 사용해서 다른 알고리즘의 단점을 최대한 극복했다. 
파이썬, Java SE 7, 안드로이드, chrome, swift까지 많은 프로그래밍 표준 정렬 알고리즘으로 채택되어 사용되고 있다.
자바의 Collections.sort()는 합병정렬과 팀정렬을 사용한다.
하지만, 자바의 Arrays.sort()는 듀얼피봇 퀵정렬을 사용하고 있다.
* 듀얼피봇 퀵정렬: 피봇 2개를 두고 3개의 구간을 만드는 퀵정렬
