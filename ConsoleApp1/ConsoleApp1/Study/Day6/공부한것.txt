공부 한 것
# LINQ
다양한 데이터 소스를 쿼리하고, 조작하기 위한 일관되고 직관적인 방법을 제공하는 C#의 언어 확장 집합. SQL과 유사.
1. LINQ를 알아두면 컬렉션, 배열, 데이터베이스 및 XML을 비롯한 다양한 소스의 데이터를 효율적으로 조작할 수 있다.
2. 가독성을 높이며 생산성을 높일 수 있다.

# AppDomain.CurrentDomain.BaseDirectory
현재 실행 중인 애플리케이션의 기본 디렉토리(경로)를 가져올 때 사용

# IEnumerable<T>
컬렉션을 다룰 때 쓰는 인터페이스.

# FirstOrDefault
함수는 컬렉션에서 첫 번째 요소를 반환하거나 또는 조건을 만족하는 여러 요소 중에서 첫 번째 요소를 반환.
컬렉션에 조건을 만족하는 요소가 존재하는지 체크하는 경우 사용.
조건에 맞는 하나의 값만 찾아낸다. 없으면 null 반환 숫자는 0, 불리언은 false.

# Where
컬렉션 안의 직원들 중에서 특정 조건을 만족하는 값만 걸러내는 기능.
조건에 맞는 모든 값을 찾아낸다. 새로운 컬렉션을 반환한다.

# 제네릭 프로그래밍
제네릭 (Generics)이란 (T = 제네릭 타입 매개변수)
제네릭은 타입(Type)을 매개변수화하는 프로그래밍 기법입니다. 특정 데이터 타입에 얽매이지 않고, 다양한 타입에서 동작하는 재사용 가능한 코드를 작성할 수 있게 함.
where T : Common은 제약 조건이라고 부릅니다. 이 제약 조건은 타입 매개변수 T가 Common 클래스를 상속받는 타입이거나 Common 클래스 자체여야 한다는 규칙을 설정.

사용하면 좋은 점
1. 코드 재사용성
2. 타입 안정성
3. 성능 향상